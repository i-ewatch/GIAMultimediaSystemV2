<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.1" name="DevExpress.Utils.v20.1, Version=20.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4xLCBWZXJzaW9uPTIwLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAADIAAAA8AAAACQUAAAAP
        BQAAAGwVAAACDgwAAIlQTkcNChoKAAAADUlIRFIAAAAyAAAAPAgGAAAAJDXpwQAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAALo0lEQVRoQ+2aC3CU1RXHo9VCrdb3
        1GpRoeCgVEaFFopKzPcIkUcplFDllf322ySAWARUVITNAwiIQWipIwItUi0KRRxpx6IjWFpQMQiBzbf7
        bQgUEJFAiyhWRcf0d5ab7CO7MQkx6JQz85/77T33nnv+93HuI0k7Ld9UmT9/fpuSkpILBX6//1yyzjih
        aTlpjTbSZsyYcev06dOfUBgtjSpVi0lrtJGG4TxQIyguLn5+zpw531WqFpPWaOObR2TWrFk/LCoq6haD
        62W+JmuEslcmlG0umtJGF8qeo9xNLRgZjZGXa8Hvp6WhZI0wp8fHlm0umtjGkpkzZ16j3E0tGJlba0xh
        D5V7k/YDrwj4XUCvtOVbFmVs2eai0W2QHyTtrtxNLRRKSoSeuZTv7gJ+/4hGzuS7RYk0po2TIXKIytNI
        s5NApkVs2eai0W2cDJHPqLyfdGcSHAWxZZuLRrdxMkS+Vvi/JXKAcLiYxTcrFuSXYshVmJuoJ28ROADe
        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
</value>
  </data>
</root>