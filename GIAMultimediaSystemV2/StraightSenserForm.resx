<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <metadata name="timer1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>17, 17</value>
  </metadata>
  <metadata name="imageCollection1.TrayLocation" type="System.Drawing.Point, System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a">
    <value>106, 17</value>
  </metadata>
  <assembly alias="DevExpress.Utils.v20.1" name="DevExpress.Utils.v20.1, Version=20.1.4.0, Culture=neutral, PublicKeyToken=b88d1754d700e49a" />
  <data name="imageCollection1.ImageStream" type="DevExpress.Utils.ImageCollectionStreamer, DevExpress.Utils.v20.1" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAEAAAD/////AQAAAAAAAAAMAgAAAFpEZXZFeHByZXNzLlV0aWxzLnYyMC4xLCBWZXJzaW9uPTIwLjEu
        NC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRva2VuPWI4OGQxNzU0ZDcwMGU0OWEMAwAAAFFT
        eXN0ZW0uRHJhd2luZywgVmVyc2lvbj00LjAuMC4wLCBDdWx0dXJlPW5ldXRyYWwsIFB1YmxpY0tleVRv
        a2VuPWIwM2Y1ZjdmMTFkNTBhM2EFAQAAAChEZXZFeHByZXNzLlV0aWxzLkltYWdlQ29sbGVjdGlvblN0
        cmVhbWVyAgAAAAlJbWFnZVNpemUERGF0YQQHE1N5c3RlbS5EcmF3aW5nLlNpemUDAAAAAgIAAAAF/P//
        /xNTeXN0ZW0uRHJhd2luZy5TaXplAgAAAAV3aWR0aAZoZWlnaHQAAAgIAwAAALQAAABQAAAACQUAAAAP
        BQAAAIAQAAACfBAAAIlQTkcNChoKAAAADUlIRFIAAAC0AAAAUAgGAAAAsBhfpgAAAAFzUkdCAK7OHOkA
        AAAEZ0FNQQAAsY8L/GEFAAAACXBIWXMAAA7DAAAOwwHHb6hkAAAQEUlEQVR4Xu1diZMVxRnPX+KFZ6KY
        EDVG0SRqPJJYVsRUrKRiQo7ySDQxmjKJZaKlpsylgoALiCgiooIisLvsLgvsLsu5BwvsfbHswd677H13
        +jfbL+x7+/Wb7pmeNzMwP+tXWuVOd7+Z3/R8/fXX3/clFiHCeYRI0BHOK0SCThGmZ2ZY19gwqx3sYe2j
        Q2xyZlr8nwgmEQnaY3SMDbFXKwrYLXvWs4t3LmcX7VzG/72MfT1nLXvueC6rH+oVfxnBBCJBe4js9nq2
        MGu1JWIZr8hYyd5rPMZm+AwewT18E/TI1ARrHOpjR3paWQ5/8Ntaq9jWlkqL+G+IAf/v1HA/G5uaFFeF
        B7s7GtiC9LdIEScSM/Y7DaXiynBhcHKcdXJTCubUSACeU0oEjR+d39XEXq8+xH5x5At2S+56dhl/2HiQ
        1AM+xzetfy/IWMFu3/see6wonb1dV8RK+s6wieng2qC94yPsa9lrEn5Lcl7Of2PVQLdoIZjAOqCot439
        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
</value>
  </data>
</root>